#include <Arduino.h>
#include <iostream>

#define MIN_NORMAL_VALUE 40

using namespace std;

String data =
    "100.0219117,99.86126506,99.84111808,99.63571822,99.65944656,99.48368617,"
    "99.42438757,99.33216606,99.20307224,99.08076002,98.98022355,98.86767519,"
    "98.81124491,98.75102265,98.62751318,98.49015441,98.37806944,98.34444729,"
    "98.23036408,98.13066759,98.05064292,97.74742784,97.79218784,97.75949689,"
    "97.68273497,97.56496347,97.34408739,97.32684123,97.2060541,97.070116,96."
    "97975511,30.85385953,30.82642764,30.66936713,30.67353624,30.35335125,96."
    "45784513,96.31015789,96.205633,96.15920986,95.95005868,95.8591244,95."
    "86706873,95.70550501,95.61253494,95.53474172,95.35868775,95.34648338,95."
    "15385538,105.4415167,95.03053777,94.88772527,94.72779293,94.74824567,94."
    "6407994,94.44349944,94.42500178,94.27331122,94.20829617,98.08804495,94."
    "00021034,93.81977927,93.79267546,93.72019958,93.63177926,93.50034547,93."
    "4662875,93.27178434,93.13370281,93.14060992,92.94977883,92.87377389,92."
    "84430404,92.66786089,92.50537579,92.55937473,92.37968909,92.28057656,92."
    "13810441,92.14583985,92.07639753,91.89960961,91.79906363,91.74768604,91."
    "55043827,91.54454979,91.37428,91.21903565,91.13528706,91.11527987,91."
    "01766381,103.618725,90.83628122,90.64535759,99.72120664,90.41684851,90."
    "40558697,90.2839162,90.16908413,90.09162182,90.0364963,89.90187344,89."
    "88595206,89.68860114,89.54548557,89.50188963,89.417628,89.32948607,89."
    "22859147,89.10333514,88.98667232,88.93508727,88.68788837,88.63773537,88."
    "55562178,88.50003565,88.36078466,88.26553113,88.18551877,88.00253705,87."
    "98082157,87.82197488,87.77464606,102.7624897,87.65641253,87.52065385,87."
    "41068187,87.37231092,87.1109836,87.14123512,87.06113256,86.96966074,86."
    "71177753,86.63724365,86.54675928,86.52391666,86.40670587,86.33562381,86."
    "1786722,86.04283591,86.00539171,85.90489694,85.79751873,85.64910361,85."
    "57129966,85.53630107,85.391657,85.33628248,85.20434214,85.09586977,85."
    "14216019,84.91273647,84.85149326,84.64679284,84.66431255,84.52795686,84."
    "35910103,84.28369495,84.15461382,84.13317315,84.01766104,83.89900767,83."
    "83987294,83.6873167,83.53385739,83.46753204,83.387769,83.34702505,83."
    "17543909,83.02637591,83.01112054,82.86482612,82.79144956,82.73335051,82."
    "53327562,82.60846892,82.46997877,82.30919003,82.13270473,82.01722514,81."
    "98148709,81.93664469,81.8251154,81.73917605,81.62972216,81.58328231,81."
    "34449332,81.31090249,81.25879991,81.05716963,81.03771224,80.86872769,80."
    "80806744,80.79190794,80.66710514,80.56531214,80.49348543,80.33438843,80."
    "25643925,80.12278138,79.98428506,79.81790265,79.88549207,79.73788578,79."
    "54121145,79.46922451,79.43976029,79.22278955,79.21773909,79.1011898,79."
    "04772204,78.9105878,78.78497219,78.68558552,78.63249364,78.50737821,78."
    "41328482,78.3806773,78.21016683,78.0407119,77.9437138,77.89159855,77."
    "76046982,77.66803072,77.72147148,77.44486945,77.40058235,77.302489,77."
    "18837755,77.13780338,77.05914837,76.84403263,76.71913672,76.63390141,76."
    "60032221,76.46688764,76.44191968,76.26610931,76.21348229,76.08008865,75."
    "99306404,75.82582453,83.33147786,75.69106212,75.55302611,75.48607484,75."
    "43807405,75.29709976,75.12092431,75.0971083,75.03433934,74.91870332,74."
    "76192702,74.7506144,74.6363643,74.54215899,74.43247075,74.28101269,74."
    "21366524,74.12024739,74.01501912,73.90907352,73.77292088,73.58269785,73."
    "51698343,73.48490603,73.48337085,73.38906113,73.22296799,73.18566995,73."
    "00528248,72.95133795,72.83701835,72.72795816,72.49278897,72.50856629,72."
    "46480058,72.38088681,72.1586869,72.07624099,71.9374771,71.99895854,71."
    "77750745,71.66680118,71.65405573,71.46086287,71.31313598,71.29768246,71."
    "2329905,71.11696714,71.02606247,70.88541002,70.91061379,70.70706069,82."
    "75776781,70.46124005,70.40410557,70.3036755,70.19464505,70.1187159,69."
    "95705231,69.9119416,69.81353883,69.61668999,69.54249185,69.590676,69."
    "3370844,69.35989939,69.26187714,69.16125016,69.06650637,68.86727978,68."
    "76995366,68.63167964,68.52531229,68.49955625,68.46155173,68.32039078,68."
    "24584669,68.16090083,67.99908881,67.86501962,67.84871227,67.64384336,67."
    "56835508,67.56595058,67.39236341,67.25001162,67.26638955,67.08113825,66."
    "96976463,66.84864387,66.7017219,66.73075424,66.59478865,66.45332646,66."
    "40789591,66.24497051,66.165";

int currentIndex, lastCommaIndex, countLoop, countInvalid;
double average, previousValue;

void setup()
{
    Serial.begin(115200);
    Serial.println("Hello, ESP32!");
    currentIndex = 0;
    lastCommaIndex = -1;
    countLoop = 0;
    average = 0;
    previousValue = -1;
}

void loop()
{
    countLoop++;
    if (currentIndex < data.length()) {
        int nextCommaIndex = data.indexOf(',', currentIndex);

        if (nextCommaIndex == -1)
            nextCommaIndex = data.length();

        String numberStr = data.substring(currentIndex, nextCommaIndex);
        double currentValue =
            numberStr.toDouble();  // ממיר את המחרוזת למספר שלם

        Serial.println(currentValue);

        currentIndex = nextCommaIndex + 1;

        if (currentValue < MIN_NORMAL_VALUE) {
            countInvalid++;
            if (countInvalid > 3) {
                Serial.println("");
                Serial.println("send error:");
                Serial.print("---");
                Serial.print(currentValue);
                Serial.println("---");
                Serial.println("");
                countLoop = 0;
                average = 0;
            }
        }
        else {
            countInvalid = 0;
            if ((abs(currentValue - previousValue) < 1) ||
                previousValue == -1) {
                average += currentValue;
                previousValue = currentValue;
            }
            else {
                average += previousValue;
            }
        }
    }
    else {
        currentIndex = 0;
    }
    delay(500);
    if (countLoop == 20) {
        Serial.println("");
        Serial.println("send:");
        Serial.print("---");
        Serial.print((average / 20));
        Serial.println("---");
        Serial.println("");

        countLoop = 0;
        average = 0;
    }
}